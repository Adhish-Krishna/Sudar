"""Test script for the Content Saver tool."""

import os
from dotenv import load_dotenv
from tools import ContentSaverTool

# Load environment variables
load_dotenv()


def test_content_saver():
    """Test the content saver tool."""
    print("\n" + "="*50)
    print("Testing Content Saver Tool")
    print("="*50)
    
    # Check environment variables
    minio_url = os.getenv("MINIO_URL", "http://localhost:9000")
    minio_access_key = os.getenv("MINIO_ACCESS_KEY", "minioadmin")
    minio_secret_key = os.getenv("MINIO_SECRET_KEY", "minioadmin")
    minio_bucket_name = os.getenv("MINIO_BUCKET_NAME", "sudar-content")
    md_to_pdf_url = os.getenv("MD_TO_PDF_URL", "http://localhost:3000/convert")
    
    print(f"\nConfiguration:")
    print(f"  MinIO URL: {minio_url}")
    print(f"  Bucket: {minio_bucket_name}")
    print(f"  MD-to-PDF URL: {md_to_pdf_url}")
    
    # Initialize tool
    tool = ContentSaverTool(
        minio_url=minio_url,
        minio_access_key=minio_access_key,
        minio_secret_key=minio_secret_key,
        minio_bucket_name=minio_bucket_name,
        md_to_pdf_url=md_to_pdf_url
    )
    
    # Test content
    markdown_content = """# Sample Educational Worksheet

## Introduction to Algebra

### Problem Set 1

1. Solve for x: 2x + 5 = 15
   - Step 1: Subtract 5 from both sides
   - Step 2: Divide by 2
   - **Answer**: x = 5

2. Simplify: 3(x + 4) - 2x
   - Step 1: Distribute 3
   - Step 2: Combine like terms
   - **Answer**: x + 12

### Notes

Remember to always:
- Check your work
- Show all steps
- Circle your final answer

---

*Generated by Sudar Educational Assistant*
"""
    
    print("\nüìù Saving content as PDF...")
    
    # Save without user/chat context
    result = tool.save_content(
        content=markdown_content,
        title="Algebra Worksheet Sample"
    )
    
    print("\n--- Result (No Context) ---")
    if result["success"]:
        print(f"‚úÖ Success!")
        print(f"Message: {result['message']}")
        print(f"Bucket: {result['bucket']}")
        print(f"Object Name: {result['object_name']}")
        print(f"Filename: {result['filename']}")
        print(f"URL: {result['url']}")
    else:
        print(f"‚ùå Failed: {result.get('error', 'Unknown error')}")
        print(f"Message: {result.get('message', 'N/A')}")
    
    # Save with user/chat context
    print("\nüìù Saving content with user/chat context...")
    result2 = tool.save_content(
        content=markdown_content,
        title="Algebra Worksheet For Student",
        user_id="student123",
        chat_id="chat456"
    )
    
    print("\n--- Result (With Context) ---")
    if result2["success"]:
        print(f"‚úÖ Success!")
        print(f"Message: {result2['message']}")
        print(f"Bucket: {result2['bucket']}")
        print(f"Object Name: {result2['object_name']}")
        print(f"Filename: {result2['filename']}")
        print(f"URL: {result2['url']}")
    else:
        print(f"‚ùå Failed: {result2.get('error', 'Unknown error')}")
        print(f"Message: {result2.get('message', 'N/A')}")


if __name__ == "__main__":
    print("\nüß™ Content Saver Tool Test")
    print("="*50)
    print("\n‚ö†Ô∏è  Make sure MinIO and md-to-pdf services are running!")
    print("   - MinIO: http://localhost:9000")
    print("   - md-to-pdf: http://localhost:3000")
    
    test_content_saver()
    
    print("\n" + "="*50)
    print("‚ú® Test completed!")
    print("="*50)
