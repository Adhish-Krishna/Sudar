# =============================================================================
# SUDAR Platform - Docker Compose Environment Variables
# =============================================================================
# Copy this file to .env and fill in your actual values
# Usage: docker-compose up -d
# =============================================================================

# -----------------------------------------------------------------------------
# Backend API Configuration
# -----------------------------------------------------------------------------
# PostgreSQL Database
DATABASE_URL=postgresql://sudar_user:sudar_password@postgres:5432/sudar_db

# JWT Secret Key (CHANGE THIS IN PRODUCTION!)
SECRET_KEY=your-super-secret-key-change-this-in-production-use-random-string

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password
SMTP_FROM_EMAIL=your-email@gmail.com
SMTP_FROM_NAME=SudarAI

# -----------------------------------------------------------------------------
# LLM Configuration
# -----------------------------------------------------------------------------
# Choose your LLM provider: google, groq, or ollama
MODEL_PROVIDER=google

# Google Gemini Configuration
GOOGLE_MODEL=gemini-2.5-flash
GOOGLE_API_KEY=your_google_api_key_here

# Groq Configuration (alternative to Google)
GROQ_API_KEY=your_groq_api_key_here
GROQ_MODEL=llama-3.3-70b-versatile

# Ollama Configuration (local, alternative to Google/Groq)
OLLAMA_MODEL=llama3.2:latest

# -----------------------------------------------------------------------------
# External API Keys
# -----------------------------------------------------------------------------
# Tavily API for web search (required for MCP tools)
TAVILY_API_KEY=your_tavily_api_key_here

# -----------------------------------------------------------------------------
# MongoDB Configuration
# -----------------------------------------------------------------------------
# Default MongoDB settings (no authentication by default)
# You can add authentication by setting MONGO_INITDB_ROOT_USERNAME and MONGO_INITDB_ROOT_PASSWORD
# MONGO_INITDB_ROOT_USERNAME=admin
# MONGO_INITDB_ROOT_PASSWORD=password

# -----------------------------------------------------------------------------
# MinIO Configuration
# -----------------------------------------------------------------------------
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin

# -----------------------------------------------------------------------------
# Service Ports (optional - defaults are set in docker-compose.yml)
# -----------------------------------------------------------------------------
# Uncomment to override default ports
# MONGODB_PORT=27017
# MINIO_PORT=9000
# POSTGRES_PORT=5432
# BACKEND_PORT=8080
# MINIO_CONSOLE_PORT=9001
# QDRANT_PORT=6333
# REDIS_PORT=6379
# MD_TO_PDF_PORT=3000
# MANIM_RENDERER_PORT=8000
# RAG_SERVICE_PORT=3001
# MCP_TOOLS_PORT=3002
# SUDAR_AGENT_PORT=3005

# -----------------------------------------------------------------------------
# Development Settings
# -----------------------------------------------------------------------------
# Set to 'true' to enable debug mode
DEBUG=false

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO
